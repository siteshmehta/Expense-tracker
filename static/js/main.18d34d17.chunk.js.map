{"version":3,"sources":["context/AddReducer.js","context/GlobalState.js","components/AddTransaction.js","components/Balance.js","components/IncomeExpense.js","components/Header.js","components/Transaction.js","components/TransactionList.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AddReducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransaction","useState","setText","setamount","useContext","className","onSubmit","e","preventDefault","newTransaction","Math","floor","random","alert","onChange","target","Balance","total","map","reduce","acc","toFixed","style","fontSize","IncomeExpense","amounts","income","item","expenses","Header","Transaction","font_color","onClick","TransactionList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18d34d17.chunk.js","sourcesContent":["export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id != action.payload\r\n        ),\r\n      }\r\n      case \"ADD_TRANSACTION\":\r\n        return {\r\n          ...state,\r\n          transactions: [action.payload,...state['transactions']]\r\n        };  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AddReducer from './AddReducer';\r\n\r\n\r\nconst initialState = {\r\n  transactions: [\r\n    { id: 1, text: \"Flower\", amount: -20 },\r\n    { id: 2, text: \"Salary\", amount: 300 },\r\n    { id: 3, text: \"Book\", amount: -10 },\r\n    { id: 4, text: \"Camera\", amount: 150 },\r\n  ],\r\n};\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\nexport default function GlobalProvider  ({ children }) {\r\n  const [state, dispatch] = useReducer(AddReducer, initialState);\r\n\r\n  //actions\r\n  function deleteTransaction(id){\r\n    dispatch({\r\n      type : 'DELETE_TRANSACTION',\r\n      payload:id\r\n    })\r\n  }\r\n\r\n  function addTransaction(transaction){\r\n    dispatch({\r\n      type : 'ADD_TRANSACTION',\r\n      payload:transaction\r\n    })\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ transactions: state.transactions,deleteTransaction,addTransaction }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}","import React,{useState,useContext} from \"react\";\r\nimport {GlobalContext} from \"../context/GlobalState\";\r\n\r\n\r\nexport default function AddTransaction() {\r\n\r\n  const [text,setText] = useState(\"\");\r\n  const [amount,setamount] = useState(0);\r\n  const {addTransaction} = useContext(GlobalContext)\r\n\r\n  \r\n  \r\n  const onSubmit = e =>{\r\n    e.preventDefault();\r\n    if(!(text || amount)){\r\n      alert(\"Please enter the value\"); return;\r\n    }\r\n    // console.log(e.target.reset())\r\n    // Math.floor(Math.random()*10000);\r\n    const newTransaction = {\r\n      id : Math.floor(Math.random()*10000),\r\n      text,\r\n      amount : +amount\r\n    };\r\n    \r\n    addTransaction(newTransaction);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"row mt-2\">\r\n      <div className=\"col-12 px-0\">\r\n        <p className=\"fw-bold border-bottom\">Add new transaction</p>\r\n      </div>\r\n\r\n      <div className=\"col-12  px-0\">\r\n        <form\r\n          onSubmit={onSubmit}\r\n        >\r\n          <p>Text</p>\r\n          <input type=\"text\" className=\"form-control shadow-none\" value={text} onChange={(e)=>setText(e.target.value)} />\r\n          <p>Amount</p>\r\n          <span className=\"text-secondary\">\r\n            (Negative- expenses, positive - income )\r\n          </span>\r\n          <input type=\"text\" className=\"form-control shadow-none\" value={amount} onChange={(e)=>setamount(e.target.value)} />\r\n          <div className=\"d-grid mt-4\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-sm text-center btn-block\"\r\n            >\r\n              Add transaction\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport default function Balance() {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  var amounts = transactions.map((transaction) => transaction[\"amount\"]);\r\n\r\n  var total = amounts.reduce((acc, value) => {\r\n    return (acc += value);\r\n  },0).toFixed(2);\r\n  \r\n  \r\n  \r\n  return (\r\n    <div className=\"row shadow-sm\">\r\n      <div className=\"col-12\">\r\n        <p>YOUR BALANCE</p>\r\n        <p style={{ fontSize: \"20px\" }}>{total}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport default function IncomeExpense() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  var amounts = transactions.map((transaction) => transaction[\"amount\"]);\r\n\r\n  const income = amounts\r\n    .filter((amount) => {\r\n      return amount > 0;\r\n    })\r\n    .reduce((acc, item) => {\r\n      return (acc += item);\r\n    },0)\r\n    .toFixed(2);\r\n\r\n  const expenses = amounts\r\n    .filter((amount) => {\r\n      return amount < 0;\r\n    })\r\n    .reduce((acc, item) => {\r\n      return (acc += item) * -1;\r\n    },0)\r\n    .toFixed(2);\r\n\r\n  return (\r\n    <div className=\"row shadow-sm text-center p-3 rounded\">\r\n      <div className=\"col-6\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">INCOME</div>\r\n          <div className=\"col-12 text-success\">{income}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-6 border-start border-dark\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">EXPENSES</div>\r\n          <div className=\"col-12 text-success\">{expenses}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"row border-bottom\">\r\n      <div className=\"col-12\">Expense Tracker</div>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useContext} from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport default function Transaction({ transaction }) {\r\n  const font_color = transaction['amount'] < 0 ? \"red\" : \"skyblue\";\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  // deleteTransaction\r\n  return (\r\n    <div className=\"row shadow-sm m-0 mt-2 rounded border\">\r\n      <div className=\"col-12 m-0\">\r\n        <div className=\"row m-0\">\r\n          <div className=\"col-9\" style={{\"color\":font_color }}>{transaction[\"text\"]}</div>\r\n          <div className=\"col-2 text-right\">{transaction[\"amount\"]}</div>\r\n          <div className=\"col-1 text-right\">\r\n          <i className=\"fas fa-minus-circle text-danger\"  style={{\"cursor\":\"pointer\"}} onClick={()=>deleteTransaction(transaction['id'])}></i>\r\n          {/* <button type=\"button\" className=\"btn btn-sm btn-danger \">DELETE</button>   */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nexport default function TransactionList() {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 m-0 p-0\">\r\n        {transactions.map(transaction=><Transaction key={transaction['id']} transaction={transaction} />)}\r\n        <p className=\"fw-bold border-bottom\">History</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpense from \"./components/IncomeExpense\";\nimport Header from \"./components/Header\";\nimport TransactionList from \"./components/TransactionList\";\nimport GlobalProvider from \"./context/GlobalState\";\n\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <GlobalProvider>\n\n      <div className=\"row\">\n        <div className=\"col-md-3 \"></div>\n        <div className=\"col-md-6\">\n          <Header />\n          <Balance />\n          <IncomeExpense/>\n          <TransactionList/>\n          <AddTransaction/>\n        </div>\n        <div className=\"col-md-3\"></div>\n      </div>\n      </GlobalProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}